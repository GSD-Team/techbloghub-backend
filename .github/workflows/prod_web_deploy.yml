name: prod_web_deploy

on:
  push:
    branches:
      - main
    pull_request:
      branches:
        - main

env:
  ECR_REPOSITORY: 598510158001.dkr.ecr.ap-northeast-2.amazonaws.com/techbloghub
  DOCKER_LATEST_TAG: latest
  MODULE_NAME: web
  SPRING_PROFILE: prod

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      # Git Checkout
      - name: Checkout
        uses: actions/checkout@v2
      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      #AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Setup AWS CLI
        uses: aws-actions/aws-cli@v2.1.0

      # S3에서 가져와서 Spring Properties 적재.
      - name: Fetch from S3 and load Spring Properties
        run: |
          aws s3 cp s3://techbloghub-server-properties/backend/web/application.yml ./web/src/main/resources/application.yml
          aws s3 cp s3://techbloghub-server-properties/backend/web/application-prod.yml ./web/src/main/resources/application-prod.yml
          aws s3 cp s3://techbloghub-server-properties/backend/web/security-config.yml ./web/src/main/resources/security-config.yml
      # gradlew 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash
      # gradle 빌드
      - name: Build with Gradle
        run: ./gradlew $MODULE_NAME:bootjar
        shell: bash
      # ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      # gradle에서 배포 버전 가져오기
      - name: Get Deploy Version
        id: deploy-version
        run: echo "::set-output name=version::$(./gradlew ${MODULE_NAME}:properties | grep ^version:| awk '{print $2}')"

      #ECR 이미지 푸시
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build --platform arm64 -t /$ECR_REPOSITORY:$DOCKER_LATEST_TAG ./$MODULE_NAME
          docker tag $ECR_REPOSITORY:$DOCKER_LATEST_TAG $ECR_REPOSITORY:$DOCKER_LATEST_TAG
          docker tag $ECR_REPOSITORY:$DOCKER_LATEST_TAG $ECR_REPOSITORY:${{ steps.deploy-version.outputs.version }}
          docker push $ECR_REPOSITORY:$DOCKER_LATEST_TAG 
          docker push $ECR_REPOSITORY:${{ steps.deploy-version.outputs.version }}
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$DOCKER_LATEST_TAG"
          
      #EC2 배포